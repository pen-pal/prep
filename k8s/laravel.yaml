---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
spec:
  rules:
    - host: test-manish.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-service
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  ports:
  - port: 80
  selector:
    app: nginx
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  #app.conf: |
    #server {
    #  listen 80 default_server;
    #  listen [::]:80 default_server;

    #  # Set nginx to serve files from the shared volume!
    #  root /var/www/public;
    #  server_name _;

    #  index index.php;

    #  location / {
    #    include  /etc/nginx/mime.types;
    #    try_files $uri /index.php?$query_string;
    #  }

    #  location = /favicon.ico { log_not_found off; access_log off; }
    #  location = /robots.txt  { access_log off; log_not_found off; }

    #  sendfile off;

    #  client_max_body_size 100m;

    #  location ~ \.php$ {
    #    include fastcgi_params;
    #    fastcgi_index index.php;
    #    fastcgi_param REQUEST_METHOD $request_method;
    #    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    #    fastcgi_pass 127.0.0.1:9000;
    #  }
    #}

  default.conf: |
    server {
            listen 80;
            index index.php index.html;
            error_log  /var/log/nginx/error.log;
            access_log /var/log/nginx/access.log;
            root /var/www/public;
            location ~ \.php$ {
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass 127.0.0.1:9000;
                fastcgi_index index.php;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
            }
            location / {
                try_files $uri $uri/ /index.php?$query_string;
                gzip_static on;
            }
        }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:alpine
        name: nginx
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: nginx-conf
          subPath: default.conf
        - name: shared-files
          mountPath: /var/www/

      - name: php-fpm-container
        image: penpal/laravel-k8s:test
        imagePullPolicy: Always
        volumeMounts:
        - name: shared-files
          mountPath: /var/www/
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "cp -r /server/http/. /var/www/"]

      volumes:
      - configMap:
          name: nginx-conf
        name: nginx-conf
      - name: shared-files
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: laravel
spec:
  type: ClusterIP
  selector:
    run: laravel
  ports:
    - port: 9000
      targetPort: 9000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: laravel
spec:
  selector:
    matchLabels:
      run: laravel
  template:
    metadata:
      labels:
        run: laravel
    spec:
      containers:
      - name: laravel
        image: penpal/laravel-k8s:test
        ports:
          - containerPort: 9000
        env:
        - name: APP_KEY
          value: base64:dwQR/aElnBQf+ec3aaTOvsU65j5T3VqZ2ptRneQqHSM=
        - name: DB_CONNECTION
          value: "nginx.svc"
        - name: DB_PORT
          value: "3306"
        - name: DB_DATABASE
          value: "laravel"
        - name: DB_USERNAME
          value: "laraveluser"
        - name: DB_PASSWORD
          value: "your_laravel_db_password"
